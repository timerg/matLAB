


clear all; close all;

Ntrain = 699; %800 pictures seperate into two parts
Ntest = 99;
W = 28; %28*28 picso
wj = rand(W^2,20).*0.1;
wk = rand(20,10).*0.5;
% wj_all = zeros(W,10)
Amean = ones(W^2,10);
eta = 0.1;
%% read images and calculate the mean image for each digit
for ll = 0:2
    for k = 0;
        for n = 0:0;
            d = zeros(1,10);
            d(n+1) = 1

            for c = [0:(k*100-1),(k*100+100):(Ntrain+100)];
                fname = sprintf('/Users/timer/OneDrive/ms1_2/neuralnetwork/hw4/data/digit_%1d_%03d.bmp',n,c);
                B = double(imread(fname));
                xj = reshape(B./255,784,1);

                yj = xj'*wj;%wj':1x20
                xk = 1./(1.+exp(-yj));  %1x20
                yk = xk*wk;% 1x10;
                err = d-yk;

                %%% change all
                for nn = 0:9;


                %%% change once a time
                delta = err(nn+1)*wk(:,nn+1).*xk'.*(1.-xk');
                wj = wj + eta.*xj*delta';
                wk(:,nn+1) = wk(:,nn+1) + eta*err(:,nn+1).*xk';
                end

            end
        end
    end
end
        for n = 0:1; 
            ww = wj*wk;
            Amean(:,n+1) = reshape(ww(:,n+1).*255*100,W^2,1);
            figure(1); subplot(3,4,n+1); 
            imshow(reshape(Amean(:,n+1),W,W),[0 255]) 
        end
%% testing
accuracy = zeros(1,10);
confusion = zeros(10,10);
for CL = 1:10
    for c = 700:799
        dist = zeros(1,10);
        fname = sprintf('digit_%1d_%03d.bmp', CL-1, c);
        A = double(imread(['/Users/timer/OneDrive/ms1_2/neuralnetwork/hw4/data/' fname]))./255;
        Fin_val = reshape(A,784,1)'*wj*wk
        dist = (ones(1,10)*100-reshape(A,784,1)'*wj*wk);
        [y,indmin] = min(dist);
        confusion(CL,indmin) = confusion(CL,indmin)+1;
    end
end
fprintf('Total Accuracy = %2.1f%%\n',100*sum(diag(confusion))/sum(sum(confusion)));

